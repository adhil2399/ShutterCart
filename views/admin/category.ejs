<%- include("../partials/admin/header") %>
<head>
  <style>
    .col-md-3 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #007bff;
      color: #fff;
      border: 1px solid #007bff;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
    }
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category/" method="post" class="d-inline">
        <!-- <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
          <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search"/>
          <button class="btn" type="submit">Search</button>
        </div> -->
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form  onsubmit="handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name"  />
                <div id="name-error" class="error-message" ></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" ></textarea>
                <div id="description-error" class="error-message" ></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">
                  Create category
                </button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th class="text-center"></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category,index)=> {%>
                  <tr>
                    <td></td>
                    <td class="text-start"><%= category.name %></td>
                    <td class="text-start"><%= category.description %></td>
                    <td class="text-start"><%= category.categoryOffer %>%</td>
                    <td class="text-start">
                      <% if(category.categoryOffer==0){ %>
                      <button class="btn btn-info" style="width: 100px">
                        <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                      </button>
                      <% }else{ %>
                      <button class="btn btn-danger"style="width: 100px">
                        <a href="#" class="text-white"onclick="removeOffer('<%= category._id %>')">Remove</a>
                      </button>
                      <% } %>
                    </td>
                    <td class="text-start">

                      <span class="badge rounded-pill <%= category.isListed? 'alert-success' :'alert-danger' %>"  >
                         <%= category.isListed? 'Listed': 'UnListed'%>
                         </span>
                    
                    </td>
                    <td class="text-start">
                      <% if(!category.isListed){ %>
                      <button class="btn btn-danger" style="width: 75px">
                        <a href="/admin/unListcategory?id=<%= category._id %>" class="text-white">List</a>
                      </button>
                      <% }else{ %>
                      <button class="btn btn-success" style="width: 75px">
                        <a href="/admin/listcategory?id=<%= category._id %>" class="text-white">UnList</a>
                      </button>
                      <% } %>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editcategory?id=<%= category._id %>" class="btn btn-info text-white">Edit</a>
                    </td>
                  </tr>
               <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

      
  </section>
 
  <%- include('../partials/admin/footer') %>
  <script>
    function handleFormSubmit(event) {
      event.preventDefault();
  
      if (!validateForm()) {
        return;  
      }
  
        const name = document.getElementsByName('name')[0].value.trim();
        const description = document.getElementById('descriptionId').value.trim();
    
        fetch('/admin/addcategory', {
          method: 'POST',
          headers: {
            'content-type': 'application/json',
          },
          body: JSON.stringify({ name, description }),
        })
          .then((response) => {
            if (!response.ok) {
              return response.json().then((err) => {
                throw err;
              });
            }
            return response.json();
          })
          .then((data) => {
            location.reload(); 
          })
          .catch((error) => {
            if (error.message === 'Category already exists') {
              Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: 'Category already exists!',
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: 'An error occurred while adding the category!',
              });
            }
          });
      }
  
    function validateForm() {
      clearErrorMessages();
  
      const name = document.getElementsByName('name')[0].value.trim();
      const description = document.getElementById('descriptionId').value.trim();
  
      let isValid = true;
  
      // Validate category name: alphabetic, spaces allowed, length 3-30
      if (!name) {
        displayErrorMessage('name-error', 'Please enter a category name');
        isValid = false;
      } else if (!/^[a-zA-Z\s]{3,20}$/.test(name)) {
        displayErrorMessage(
          'name-error',
          'Name should only contain alphabetic characters (3-30 characters)'
        );
        isValid = false;
      }
  
      // Validate description: no special characters, 10-200 characters
      if (!description) {
        displayErrorMessage('description-error', 'Please enter a description');
        isValid = false;
      } else if (!/^.{5,200}$/.test(description)) {
        displayErrorMessage(
          'description-error',
          'Description must be between 10 and 200 characters'
        );
        isValid = false;
      }
  
      return isValid;
    }
  
    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = 'block';
    }
  
    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach((element) => {
        element.innerText = '';
        element.style.display = 'none';
      });
    }

    async function addOffer(categoryid){
      const {value:amount}= await swal.fire({
        title:'Offer in percentage',
        input: 'number',
        InputLabel:'Percentage',
        inputPlaceholder:'%',
      })
       if(amount){
        try {
          const response = await fetch('/admin/addCategoryOffer',{
            method:'POST',
            headers:{
              'content-type':'application/json'
            },
            body:JSON.stringify({
              percentage: amount,
              categoryid:categoryid,

            })
          })
      const data = await response.json();
      if(response.ok){
        swal.fire(
          "Offer added",
          'The offer has been added',
          'success'
        ).then(()=>{
          location.reload();
        })
      }else{
        swal.fire(
          'Failed',
          data.message || 'Adding offer failed',
          'error'
        )
      }
        } catch (error) {
          swal.fire(
            'Error',
            'An error occured while adding the offer',
            'error'
          );
          console.log('Error adding offer',error)
        }
      }
    }

    async function removeOffer(categoryid) {
      try {
          const response = await fetch('/admin/removeCategoryOffer',{
            method:'POST',
            headers:{
              'content-type':'application/json'
            },
            body:JSON.stringify({
              categoryid:categoryid,

            })
          })
          const data = await response.json()

          if(response.ok|| data.status=== true){
            swal.fire(
          "Offer Removed",
          'The offer has been removed',
          'success'
        ).then(()=>{
          location.reload();
        })
      }else{
        swal.fire(
          'Failed',
          data.message || 'removing offer failed',
          'error'
        )
          }
    }catch(error){
      swal.fire(
            'Error',
            'An error occured while removing the offer',
            'error'
          );
          console.log('Error removing offer',error)
        }
      }
 

  </script>
  